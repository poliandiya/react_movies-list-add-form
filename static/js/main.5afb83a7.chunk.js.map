{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","handleChange","event","target","name","value","setState","handleSubmit","onAdd","props","newMovie","preventDefault","this","onSubmit","type","placeholder","onChange","required","pattern","disabled","Component","App","moviesFromServer","addMovie","currentState","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5afb83a7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    } as Pick<State, keyof State>);\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    const { onAdd } = this.props;\n    const newMovie = { ...this.state };\n\n    event.preventDefault();\n\n    onAdd(newMovie);\n\n    return {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    };\n  };\n\n  render() {\n    const {\n      title, description, imdbId, imdbUrl, imgUrl,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"d-flex flex-column gap-2\"\n      >\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          placeholder=\"Enter movie title\"\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"description\"\n          value={description}\n          placeholder=\"Enter movie description\"\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          type=\"url\"\n          pattern=\"/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"Enter movie image\"\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          type=\"url\"\n          pattern=\"/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"Enter IMDB image\"\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          value={imdbId}\n          placeholder=\"Enter IMDB id\"\n          onChange={this.handleChange}\n          required\n        />\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          disabled={!title || !imgUrl || !imdbUrl || !imdbId}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(currentState => ({\n      movies: [movie, ...currentState.movies],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h1 className=\"mb-4\">Add new movie</h1>\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}